/*!
 * VERSION: 0.2.0
 * DATE: 2017-01-17
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
 * CustomBounce is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 **/
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() { "use strict";
        _gsScope._gsDefine("easing.CustomBounce", ["easing.CustomEase"], function(l) {
            function w(o) { for (var r = o.length, e = 1 / o[r - 2], n = 2; n < r; n += 2) o[n] = (o[n] * e * 1e3 | 0) / 1e3;
                o[r - 2] = 1 }

            function e(o, r) { if (this.vars = r = r || {}, !s) return window.location.href = "http://" + i + n + "?plugin=" + t + "&source=codepen", !1;
                r.squash && (this.squash = new l(r.squashID || o + "-squash")), l.call(this, o), (this.bounce = this).update(r) } var o, t = "CustomBounce",
                i = String.fromCharCode(103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109),
                n = String.fromCharCode(47, 114, 101, 113, 117, 105, 114, 101, 115, 45, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 47),
                s = function(o) { for (var r = -1 !== (window ? window.location.href : "").indexOf(String.fromCharCode(103, 114, 101, 101, 110, 115, 111, 99, 107)) && -1 !== o.indexOf(String.fromCharCode(108, 111, 99, 97, 108, 104, 111, 115, 116)), e = [i, String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 105, 111), String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 112, 108, 117, 109, 98, 105, 110, 103), String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 100, 101, 118), String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 97, 112, 112), String.fromCharCode(112, 101, 110, 115, 46, 99, 108, 111, 117, 100), String.fromCharCode(112, 101, 110, 115, 46, 105, 111), String.fromCharCode(109, 111, 116, 105, 111, 110, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), String.fromCharCode(99, 115, 115, 45, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), String.fromCharCode(99, 100, 112, 110, 46, 105, 111), String.fromCharCode(103, 97, 110, 110, 111, 110, 46, 116, 118), String.fromCharCode(99, 111, 100, 101, 99, 97, 110, 121, 111, 110, 46, 110, 101, 116), String.fromCharCode(116, 104, 101, 109, 101, 102, 111, 114, 101, 115, 116, 46, 110, 101, 116), String.fromCharCode(99, 101, 114, 101, 98, 114, 97, 120, 46, 99, 111, 46, 117, 107), String.fromCharCode(116, 121, 109, 112, 97, 110, 117, 115, 46, 110, 101, 116), String.fromCharCode(116, 119, 101, 101, 110, 109, 97, 120, 46, 99, 111, 109), String.fromCharCode(116, 119, 101, 101, 110, 108, 105, 116, 101, 46, 99, 111, 109), String.fromCharCode(112, 108, 110, 107, 114, 46, 99, 111), String.fromCharCode(104, 111, 116, 106, 97, 114, 46, 99, 111, 109), String.fromCharCode(119, 101, 98, 112, 97, 99, 107, 98, 105, 110, 46, 99, 111, 109), String.fromCharCode(97, 114, 99, 104, 105, 118, 101, 46, 111, 114, 103), String.fromCharCode(99, 111, 100, 101, 115, 97, 110, 100, 98, 111, 120, 46, 105, 111), String.fromCharCode(115, 116, 97, 99, 107, 98, 108, 105, 116, 122, 46, 99, 111, 109), String.fromCharCode(99, 111, 100, 105, 101, 114, 46, 105, 111), String.fromCharCode(106, 115, 102, 105, 100, 100, 108, 101, 46, 110, 101, 116)], n = e.length; - 1 < --n;)
                        if (-1 !== o.indexOf(e[n])) return !0;
                    return r && window && window.console && console.log(String.fromCharCode(87, 65, 82, 78, 73, 78, 71, 58, 32, 97, 32, 115, 112, 101, 99, 105, 97, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32) + t + String.fromCharCode(32, 105, 115, 32, 114, 117, 110, 110, 105, 110, 103, 32, 108, 111, 99, 97, 108, 108, 121, 44, 32, 98, 117, 116, 32, 105, 116, 32, 119, 105, 108, 108, 32, 110, 111, 116, 32, 119, 111, 114, 107, 32, 111, 110, 32, 97, 32, 108, 105, 118, 101, 32, 100, 111, 109, 97, 105, 110, 32, 98, 101, 99, 97, 117, 115, 101, 32, 105, 116, 32, 105, 115, 32, 97, 32, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 32, 98, 101, 110, 101, 102, 105, 116, 32, 111, 102, 32, 67, 108, 117, 98, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 46, 32, 80, 108, 101, 97, 115, 101, 32, 115, 105, 103, 110, 32, 117, 112, 32, 97, 116, 32, 104, 116, 116, 112, 58, 47, 47, 103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109, 47, 99, 108, 117, 98, 47, 32, 97, 110, 100, 32, 116, 104, 101, 110, 32, 100, 111, 119, 110, 108, 111, 97, 100, 32, 116, 104, 101, 32, 39, 114, 101, 97, 108, 39, 32, 118, 101, 114, 115, 105, 111, 110, 32, 102, 114, 111, 109, 32, 121, 111, 117, 114, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 32, 97, 99, 99, 111, 117, 110, 116, 32, 119, 104, 105, 99, 104, 32, 104, 97, 115, 32, 110, 111, 32, 115, 117, 99, 104, 32, 108, 105, 109, 105, 116, 97, 116, 105, 111, 110, 115, 46, 32, 84, 104, 101, 32, 102, 105, 108, 101, 32, 121, 111, 117, 39, 114, 101, 32, 117, 115, 105, 110, 103, 32, 119, 97, 115, 32, 108, 105, 107, 101, 108, 121, 32, 100, 111, 119, 110, 108, 111, 97, 100, 101, 100, 32, 102, 114, 111, 109, 32, 101, 108, 115, 101, 119, 104, 101, 114, 101, 32, 111, 110, 32, 116, 104, 101, 32, 119, 101, 98, 32, 97, 110, 100, 32, 105, 115, 32, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 116, 111, 32, 108, 111, 99, 97, 108, 32, 117, 115, 101, 32, 111, 114, 32, 111, 110, 32, 115, 105, 116, 101, 115, 32, 108, 105, 107, 101, 32, 99, 111, 100, 101, 112, 101, 110, 46, 105, 111, 46)), r }(window ? window.location.host : ""); return e.prototype = o = new l, o.constructor = e, o.update = function(o) { o = o || this.vars; for (var r, e, n, t, i, s, a = Math.min(.999, o.strength || .7), f = a, h = (o.squash || 0) / 100, C = h, u = 1 / .03, d = .2, g = 1, m = .1, S = [0, 0, .07, 0, .1, 1, .1, 1], c = [0, 0, 0, 0, .1, 0, .1, 0], p = 0; p < 200 && (i = m + (d *= f * ((f + 1) / 2)), t = 1 - (g *= a * a), e = (n = m + .49 * d) + .8 * (n - (r = m + g / u)), h && (m += h, r += h, n += h, e += h, i += h, s = h / C, c.push(m - h, 0, m - h, s, m - h / 2, s, m, s, m, 0, m, 0, m, -.6 * s, m + (i - m) / 6, 0, i, 0), S.push(m - h, 1, m, 1, m, 1), h *= a * a), S.push(m, 1, r, t, n, t, e, t, i, 1, i, 1), a *= .95, u = g / (i - e), m = i, !(.999 < t)); p++); if (o.endAtStart) { if (n = -.1, S.unshift(n, 1, n, 1, -.07, 0), C)
                        for (n -= h = 2.5 * C, S.unshift(n, 1, n, 1, n, 1), c.splice(0, 6), c.unshift(n, 0, n, 0, n, 1, n + h / 2, 1, n + h, 1, n + h, 0, n + h, 0, n + h, -.6, n + h + .033, 0), p = 0; p < c.length; p += 2) c[p] -= n; for (p = 0; p < S.length; p += 2) S[p] -= n, S[p + 1] = 1 - S[p + 1] } return h && (w(c), c[2] = "C" + c[2], this.squash || (this.squash = new l(o.squashID || this.id + "-squash")), this.squash.setData("M" + c.join(","))), w(S), S[2] = "C" + S[2], this.setData("M" + S.join(",")) }, e.create = function(o, r) { return new e(o, r) }, e.version = "0.2.0", e }, !0) }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function() { "use strict";

        function o() { return (_gsScope.GreenSockGlobals || _gsScope).CustomBounce } "function" == typeof define && define.amd ? define(["TweenLite", "CustomEase"], o) : "undefined" != typeof module && module.exports && (require("./CustomEase.js"), require("../TweenLite.js"), module.exports = o()) }();